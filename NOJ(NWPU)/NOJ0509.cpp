/*
题目内容：
山迪要出席一个周末表演晚会，他在会上要表演卡片魔术。他有n（0＜n≤100）张卡片，
每张卡片上都标明了1～1000之间的某个数字，这n张卡片本来是有序的，可是山迪的助手不小心把卡片打乱了。
这可急坏了山迪，忙令助手迅速通过一些操作把这些卡片变回有序的，
而山迪的助手是个思想简单的人，他能做的操作只有一种：交换任意两张卡片的位置。
现在，山迪想知道助手最少交换几次可以达到目的，以便尽快决定是否替换这个魔术表演，聪明的你能帮助他么？
输入格式：第1行是一个正整数n，第2行n个是打乱顺序后、每张卡片上的数字。
输出格式：输出所需要的最少交换次数
输入样例：
5
1 4 7 8 3
输出样例：
3
*/
#include <iostream>
using namespace std;
int main()
{
    int n;
    cin >> n;
    int i, j, t;
    int *num = new int[n];
    int count = 0;
    for (i = 0; i < n; i++)
    {
        cin >> num[i];
    }
    for (i = 0; i < n - 1; i++)
    {
        for (j = 0; j < n - i - 1; j++)
        {
            if (num[j] > num[j + 1])
            {
                t = num[j], num[j] = num[j + 1], num[j + 1] = t;
                count += 1;
            }
        }
    }
    cout << count;
    return 0;
}
